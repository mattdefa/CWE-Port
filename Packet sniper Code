### 1. **PacketSniper** - Network Packet Analyzer (Python)
```python
# PacketSniper: Simple Network Packet Sniffer
import socket
import struct

def main():
    # Create a raw socket and bind it to the public interface
    conn = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(3))
    print("[+] PacketSniper started. Listening for packets...")

    while True:
        raw_data, addr = conn.recvfrom(65535)
        dest_mac, src_mac, eth_proto, data = ethernet_frame(raw_data)
        print(f"Ethernet Frame: Dest={dest_mac}, Src={src_mac}, Protocol={eth_proto}")


def ethernet_frame(data):
    dest, src, proto = struct.unpack('! 6s 6s H', data[:14])
    return get_mac_addr(dest), get_mac_addr(src), socket.htons(proto), data[14:]

def get_mac_addr(bytes_addr):
    bytes_str = map('{:02x}'.format, bytes_addr)
    return ':'.join(bytes_str).upper()

if __name__ == "__main__":
    main()
```
**README.md**
```
# PacketSniper
A simple network packet sniffer written in Python using raw sockets. It captures Ethernet frames and displays MAC addresses and protocol types.

## Features
- Captures Ethernet traffic in real time
- Displays source/destination MAC addresses
- Extracts Ethernet protocol type

## Usage
Run the script with Python (requires root privileges on Linux):
```bash
sudo python3 packet_sniper.py
```
```
---